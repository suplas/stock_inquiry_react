{"ast":null,"code":"// 숫자 세자리 콤마\nexport function Comma(data) {\n  if (data) {\n    return data.toLocaleString(\"ko-KR\");\n  } else {\n    return 0;\n  }\n}\n\n// 날짜 변환\n_c = Comma;\nexport function BasdConversion(basdd) {\n  const year = parseInt(basdd.replace(/^(\\d{4})(\\d{2})(\\d{2})$/, \"$1\"), 10);\n  const month = parseInt(basdd.replace(/^(\\d{4})(\\d{2})(\\d{2})$/, \"$2\"), 10) - 1;\n  const day = parseInt(basdd.replace(/^(\\d{4})(\\d{2})(\\d{2})$/, \"$3\"), 10);\n  const converteDate = new Date(year, month, day);\n  const convertYear = converteDate.getFullYear();\n  const convertMonth = converteDate.getMonth() + 1;\n  const converteDay = converteDate.getDate();\n  const result = convertYear + \".\" + (convertMonth < 10 ? \"0\" + convertMonth : convertMonth) + \".\" + converteDay;\n  return result;\n}\n_c2 = BasdConversion;\nvar _c, _c2;\n$RefreshReg$(_c, \"Comma\");\n$RefreshReg$(_c2, \"BasdConversion\");","map":{"version":3,"names":["Comma","data","toLocaleString","_c","BasdConversion","basdd","year","parseInt","replace","month","day","converteDate","Date","convertYear","getFullYear","convertMonth","getMonth","converteDay","getDate","result","_c2","$RefreshReg$"],"sources":["/Users/jungminwoo/Documents/GitHub/stock_inquiry_node_react/react/src/assets/util.ts"],"sourcesContent":["// 숫자 세자리 콤마\nexport function Comma(data: number) {\n  if (data) {\n    return data.toLocaleString(\"ko-KR\");\n  } else {\n    return 0;\n  }\n}\n\n// 날짜 변환\nexport function BasdConversion(basdd: string) {\n  const year = parseInt(basdd.replace(/^(\\d{4})(\\d{2})(\\d{2})$/, \"$1\"), 10);\n  const month = parseInt(basdd.replace(/^(\\d{4})(\\d{2})(\\d{2})$/, \"$2\"), 10) - 1;\n  const day = parseInt(basdd.replace(/^(\\d{4})(\\d{2})(\\d{2})$/, \"$3\"), 10);\n\n  const converteDate = new Date(year, month, day);\n  const convertYear = converteDate.getFullYear();\n  const convertMonth = converteDate.getMonth() + 1;\n  const converteDay = converteDate.getDate();\n\n  const result =\n    convertYear +\n    \".\" +\n    (convertMonth < 10 ? \"0\" + convertMonth : convertMonth) +\n    \".\" +\n    converteDay;\n  return result;\n}\n"],"mappings":"AAAA;AACA,OAAO,SAASA,KAAKA,CAACC,IAAY,EAAE;EAClC,IAAIA,IAAI,EAAE;IACR,OAAOA,IAAI,CAACC,cAAc,CAAC,OAAO,CAAC;EACrC,CAAC,MAAM;IACL,OAAO,CAAC;EACV;AACF;;AAEA;AAAAC,EAAA,GARgBH,KAAK;AASrB,OAAO,SAASI,cAAcA,CAACC,KAAa,EAAE;EAC5C,MAAMC,IAAI,GAAGC,QAAQ,CAACF,KAAK,CAACG,OAAO,CAAC,yBAAyB,EAAE,IAAI,CAAC,EAAE,EAAE,CAAC;EACzE,MAAMC,KAAK,GAAGF,QAAQ,CAACF,KAAK,CAACG,OAAO,CAAC,yBAAyB,EAAE,IAAI,CAAC,EAAE,EAAE,CAAC,GAAG,CAAC;EAC9E,MAAME,GAAG,GAAGH,QAAQ,CAACF,KAAK,CAACG,OAAO,CAAC,yBAAyB,EAAE,IAAI,CAAC,EAAE,EAAE,CAAC;EAExE,MAAMG,YAAY,GAAG,IAAIC,IAAI,CAACN,IAAI,EAAEG,KAAK,EAAEC,GAAG,CAAC;EAC/C,MAAMG,WAAW,GAAGF,YAAY,CAACG,WAAW,CAAC,CAAC;EAC9C,MAAMC,YAAY,GAAGJ,YAAY,CAACK,QAAQ,CAAC,CAAC,GAAG,CAAC;EAChD,MAAMC,WAAW,GAAGN,YAAY,CAACO,OAAO,CAAC,CAAC;EAE1C,MAAMC,MAAM,GACVN,WAAW,GACX,GAAG,IACFE,YAAY,GAAG,EAAE,GAAG,GAAG,GAAGA,YAAY,GAAGA,YAAY,CAAC,GACvD,GAAG,GACHE,WAAW;EACb,OAAOE,MAAM;AACf;AAACC,GAAA,GAjBehB,cAAc;AAAA,IAAAD,EAAA,EAAAiB,GAAA;AAAAC,YAAA,CAAAlB,EAAA;AAAAkB,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}