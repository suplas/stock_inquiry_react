{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nexport const fetchStockData = createAsyncThunk(\"information/fetchStockData\", async (_, thunkAPI) => {\n  try {\n    const response = await axios.get(\"http://219.250.2.138:5018/krx/api/list/1\");\n    return response.data;\n  } catch (error) {\n    return thunkAPI.rejectWithValue(error);\n  }\n});\nconst initialState = {\n  status: \"\"\n};\nexport const itemSlice = createSlice({\n  name: \"items\",\n  initialState,\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(fetchStockData.fulfilled, (state, action) => {\n      const newItem = [];\n      action.payload.forEach(item => {\n        newItem.push(item);\n      });\n      state.item = newItem;\n      state.status = \"success\";\n    });\n  }\n});","map":{"version":3,"names":["createAsyncThunk","createSlice","axios","fetchStockData","_","thunkAPI","response","get","data","error","rejectWithValue","initialState","status","itemSlice","name","reducers","extraReducers","builder","addCase","fulfilled","state","action","newItem","payload","forEach","item","push"],"sources":["/Users/jungminwoo/Documents/GitHub/stock_inquiry_node_react/react/src/slice/itemSlice.ts"],"sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n\ntype fetchStockType = {\n  id: number;\n  BAS_DD: number;\n  ISU_NM: string;\n  MKTCAP: string;\n  MKT_NM: number;\n  TDD_OPNPRC: number;\n  ACC_TRDVOL: number;\n};\n\nexport const fetchStockData = createAsyncThunk(\n  \"information/fetchStockData\",\n  async (_, thunkAPI) => {\n    try {\n      const response = await axios.get(\n        \"http://219.250.2.138:5018/krx/api/list/1\"\n      );\n      return response.data;\n    } catch (error) {\n      return thunkAPI.rejectWithValue(error);\n    }\n  }\n);\n\nconst initialState = {\n  status: \"\",\n};\n\nexport const itemSlice = createSlice({\n  name: \"items\",\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder.addCase(fetchStockData.fulfilled, (state, action) => {\n        const newItem:fetchStockType[] = [];\n        action.payload.forEach((item: fetchStockType) => {\n            newItem.push(item);\n        });\n        state.item = newItem;\n        state.status = \"success\";    \n    });\n  },\n});\n\n"],"mappings":"AAAA,SAASA,gBAAgB,EAAEC,WAAW,QAAQ,kBAAkB;AAChE,OAAOC,KAAK,MAAM,OAAO;AAYzB,OAAO,MAAMC,cAAc,GAAGH,gBAAgB,CAC5C,4BAA4B,EAC5B,OAAOI,CAAC,EAAEC,QAAQ,KAAK;EACrB,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACK,GAAG,CAC9B,0CACF,CAAC;IACD,OAAOD,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,OAAOJ,QAAQ,CAACK,eAAe,CAACD,KAAK,CAAC;EACxC;AACF,CACF,CAAC;AAED,MAAME,YAAY,GAAG;EACnBC,MAAM,EAAE;AACV,CAAC;AAED,OAAO,MAAMC,SAAS,GAAGZ,WAAW,CAAC;EACnCa,IAAI,EAAE,OAAO;EACbH,YAAY;EACZI,QAAQ,EAAE,CAAC,CAAC;EACZC,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CAACC,OAAO,CAACf,cAAc,CAACgB,SAAS,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK;MACzD,MAAMC,OAAwB,GAAG,EAAE;MACnCD,MAAM,CAACE,OAAO,CAACC,OAAO,CAAEC,IAAoB,IAAK;QAC7CH,OAAO,CAACI,IAAI,CAACD,IAAI,CAAC;MACtB,CAAC,CAAC;MACFL,KAAK,CAACK,IAAI,GAAGH,OAAO;MACpBF,KAAK,CAACR,MAAM,GAAG,SAAS;IAC5B,CAAC,CAAC;EACJ;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}