{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nexport const fetchStockData = createAsyncThunk(\"stock/items\", async ({\n  page,\n  limit\n}, thunkAPI) => {\n  const response = await axios.get(`http://219.250.2.138:5018/krx/api/list/${page}/${limit}`);\n  console.log(response.data);\n  const responeData = response.data;\n  return responeData;\n});\nconst initialState = {\n  item: {\n    data: {\n      id: 0,\n      BAS_DD: 0,\n      ISU_NM: \"\",\n      MKTCAP: 0,\n      MKT_NM: \"\",\n      TDD_OPNPRC: 0,\n      ACC_TRDVOL: 0\n    },\n    totalPage: 0,\n    totalData: 0\n  },\n  fetchStatus: \"\"\n};\nconst itemSlice = createSlice({\n  name: \"stock\",\n  initialState,\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(fetchStockData.pending, state => {\n      state.fetchStatus = \"loading\";\n    }).addCase(fetchStockData.fulfilled, (state, {\n      payload\n    }) => {\n      state.item = payload;\n      state.fetchStatus = \"success\";\n    }).addCase(fetchStockData.rejected, (state, action) => {\n      var _action$error$message;\n      state.fetchStatus = (_action$error$message = action.error.message) !== null && _action$error$message !== void 0 ? _action$error$message : \"\";\n      console.log(action.error);\n    });\n  }\n});\n\n//export const { } = itemSlice.actions;\n//export const items = (state => state.item);\nexport default itemSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","axios","fetchStockData","page","limit","thunkAPI","response","get","console","log","data","responeData","initialState","item","id","BAS_DD","ISU_NM","MKTCAP","MKT_NM","TDD_OPNPRC","ACC_TRDVOL","totalPage","totalData","fetchStatus","itemSlice","name","reducers","extraReducers","builder","addCase","pending","state","fulfilled","payload","rejected","action","_action$error$message","error","message","reducer"],"sources":["/Users/jungminwoo/Documents/GitHub/stock_inquiry_node_react/react/src/slice/itemSlice.ts"],"sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n\ntype fetchStockDataType = {\n  id: number;\n  BAS_DD: number;\n  ISU_NM: string;\n  MKTCAP: number;\n  MKT_NM: string;\n  TDD_OPNPRC: number;\n  ACC_TRDVOL: number;\n};\n\ntype fetchStockType = {\n  data: fetchStockDataType;\n  totalPage: number;\n  totalData: number;\n};\n\ninterface stockDataProps {\n  page: number;\n  limit: number;\n}\n\nexport const fetchStockData = createAsyncThunk(\n  \"stock/items\",\n  async ({ page, limit }: stockDataProps, thunkAPI) => {\n    const response = await axios.get(\n      `http://219.250.2.138:5018/krx/api/list/${page}/${limit}`\n    );\n    console.log(response.data);\n    const responeData = response.data;\n    return responeData as fetchStockType;\n  }\n);\n\nexport interface stateProps {\n  item: fetchStockType;\n  fetchStatus: string;\n}\n\nconst initialState: stateProps = {\n  item: {\n    data: {\n      id: 0,\n      BAS_DD: 0,\n      ISU_NM: \"\",\n      MKTCAP: 0,\n      MKT_NM: \"\",\n      TDD_OPNPRC: 0,\n      ACC_TRDVOL: 0,\n    },\n    totalPage: 0,\n    totalData: 0,\n  },\n  fetchStatus: \"\",\n};\n\nconst itemSlice = createSlice({\n  name: \"stock\",\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder\n      .addCase(fetchStockData.pending, (state) => {\n        state.fetchStatus = \"loading\";\n      })\n      .addCase(fetchStockData.fulfilled, (state, { payload }) => {\n        state.item = payload;\n        state.fetchStatus = \"success\";\n      })\n      .addCase(fetchStockData.rejected, (state, action) => {\n        state.fetchStatus = action.error.message ?? \"\";\n        console.log(action.error);\n      });\n  },\n});\n\n//export const { } = itemSlice.actions;\n//export const items = (state => state.item);\nexport default itemSlice.reducer;\n"],"mappings":"AAAA,SAASA,gBAAgB,EAAEC,WAAW,QAAQ,kBAAkB;AAChE,OAAOC,KAAK,MAAM,OAAO;AAuBzB,OAAO,MAAMC,cAAc,GAAGH,gBAAgB,CAC5C,aAAa,EACb,OAAO;EAAEI,IAAI;EAAEC;AAAsB,CAAC,EAAEC,QAAQ,KAAK;EACnD,MAAMC,QAAQ,GAAG,MAAML,KAAK,CAACM,GAAG,CAC7B,0CAAyCJ,IAAK,IAAGC,KAAM,EAC1D,CAAC;EACDI,OAAO,CAACC,GAAG,CAACH,QAAQ,CAACI,IAAI,CAAC;EAC1B,MAAMC,WAAW,GAAGL,QAAQ,CAACI,IAAI;EACjC,OAAOC,WAAW;AACpB,CACF,CAAC;AAOD,MAAMC,YAAwB,GAAG;EAC/BC,IAAI,EAAE;IACJH,IAAI,EAAE;MACJI,EAAE,EAAE,CAAC;MACLC,MAAM,EAAE,CAAC;MACTC,MAAM,EAAE,EAAE;MACVC,MAAM,EAAE,CAAC;MACTC,MAAM,EAAE,EAAE;MACVC,UAAU,EAAE,CAAC;MACbC,UAAU,EAAE;IACd,CAAC;IACDC,SAAS,EAAE,CAAC;IACZC,SAAS,EAAE;EACb,CAAC;EACDC,WAAW,EAAE;AACf,CAAC;AAED,MAAMC,SAAS,GAAGxB,WAAW,CAAC;EAC5ByB,IAAI,EAAE,OAAO;EACbb,YAAY;EACZc,QAAQ,EAAE,CAAC,CAAC;EACZC,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CACJC,OAAO,CAAC3B,cAAc,CAAC4B,OAAO,EAAGC,KAAK,IAAK;MAC1CA,KAAK,CAACR,WAAW,GAAG,SAAS;IAC/B,CAAC,CAAC,CACDM,OAAO,CAAC3B,cAAc,CAAC8B,SAAS,EAAE,CAACD,KAAK,EAAE;MAAEE;IAAQ,CAAC,KAAK;MACzDF,KAAK,CAAClB,IAAI,GAAGoB,OAAO;MACpBF,KAAK,CAACR,WAAW,GAAG,SAAS;IAC/B,CAAC,CAAC,CACDM,OAAO,CAAC3B,cAAc,CAACgC,QAAQ,EAAE,CAACH,KAAK,EAAEI,MAAM,KAAK;MAAA,IAAAC,qBAAA;MACnDL,KAAK,CAACR,WAAW,IAAAa,qBAAA,GAAGD,MAAM,CAACE,KAAK,CAACC,OAAO,cAAAF,qBAAA,cAAAA,qBAAA,GAAI,EAAE;MAC9C5B,OAAO,CAACC,GAAG,CAAC0B,MAAM,CAACE,KAAK,CAAC;IAC3B,CAAC,CAAC;EACN;AACF,CAAC,CAAC;;AAEF;AACA;AACA,eAAeb,SAAS,CAACe,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}