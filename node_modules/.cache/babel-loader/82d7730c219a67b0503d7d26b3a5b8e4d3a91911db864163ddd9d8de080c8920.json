{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nexport const fetchStockData = createAsyncThunk(\"information/fetchStockData\", async (page, thunkAPI) => {\n  const response = await axios.get(`http://219.250.2.138:5018/krx/api/list/${page}`);\n  const responeData = response.data.data;\n  console.log(responeData);\n  return responeData;\n});\nconst initialState = {\n  item: [],\n  fetchStatus: \"\"\n};\nconst itemSlice = createSlice({\n  name: \"StockData\",\n  initialState,\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(fetchStockData.fulfilled, (state, {\n      payload\n    }) => {\n      state.item = payload;\n      state.fetchStatus = \"success\";\n    });\n  }\n});\nexport default itemSlice;","map":{"version":3,"names":["createAsyncThunk","createSlice","axios","fetchStockData","page","thunkAPI","response","get","responeData","data","console","log","initialState","item","fetchStatus","itemSlice","name","reducers","extraReducers","builder","addCase","fulfilled","state","payload"],"sources":["/Users/jungminwoo/Documents/GitHub/stock_inquiry_node_react/react/src/slice/itemSlice.ts"],"sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n\ntype fetchStockType = {\n  id: number;\n  BAS_DD: number;\n  ISU_NM: string;\n  MKTCAP: string;\n  MKT_NM: number;\n  TDD_OPNPRC: number;\n  ACC_TRDVOL: number;\n};\n\nexport const fetchStockData = createAsyncThunk(\n  \"information/fetchStockData\",\n  async (page,thunkAPI) => {\n    const response = await axios.get(`http://219.250.2.138:5018/krx/api/list/${page}`);\n    const responeData = response.data.data;\n    console.log(responeData);\n    return responeData;\n  }\n);\n\ninterface stateProps {\n    item:any[];\n    fetchStatus:string;\n}\n\nconst initialState:stateProps = {\n  item: [],\n  fetchStatus: \"\",\n};\n\nconst itemSlice = createSlice({\n  name: \"StockData\",\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder.addCase(fetchStockData.fulfilled, (state, {payload}) => {\n      state.item = payload;\n      state.fetchStatus = \"success\";\n    });\n  },\n});\n\nexport default itemSlice;\n"],"mappings":"AAAA,SAASA,gBAAgB,EAAEC,WAAW,QAAQ,kBAAkB;AAChE,OAAOC,KAAK,MAAM,OAAO;AAYzB,OAAO,MAAMC,cAAc,GAAGH,gBAAgB,CAC5C,4BAA4B,EAC5B,OAAOI,IAAI,EAACC,QAAQ,KAAK;EACvB,MAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACK,GAAG,CAAE,0CAAyCH,IAAK,EAAC,CAAC;EAClF,MAAMI,WAAW,GAAGF,QAAQ,CAACG,IAAI,CAACA,IAAI;EACtCC,OAAO,CAACC,GAAG,CAACH,WAAW,CAAC;EACxB,OAAOA,WAAW;AACpB,CACF,CAAC;AAOD,MAAMI,YAAuB,GAAG;EAC9BC,IAAI,EAAE,EAAE;EACRC,WAAW,EAAE;AACf,CAAC;AAED,MAAMC,SAAS,GAAGd,WAAW,CAAC;EAC5Be,IAAI,EAAE,WAAW;EACjBJ,YAAY;EACZK,QAAQ,EAAE,CAAC,CAAC;EACZC,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CAACC,OAAO,CAACjB,cAAc,CAACkB,SAAS,EAAE,CAACC,KAAK,EAAE;MAACC;IAAO,CAAC,KAAK;MAC9DD,KAAK,CAACT,IAAI,GAAGU,OAAO;MACpBD,KAAK,CAACR,WAAW,GAAG,SAAS;IAC/B,CAAC,CAAC;EACJ;AACF,CAAC,CAAC;AAEF,eAAeC,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}